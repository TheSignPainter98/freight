local *

verbose = false

LOG_DIR = "logs"
LOG_FILE = "#{LOG_DIR}/run-#{os.date '%Y-%m-%d@%H:%M:%S'}.log"

export set_log_verbosity = (v) ->
  verbose = v

print = print
export log = (fn) ->
  msg = fn!
  if verbose
    print msg
  record msg

export fatal = (...) ->
  fragments = with {}
    for i = 1, select '#', ...
      [] = tostring select i, ...
  msg = table.concat fragments, ' '
  print msg
  record msg

  os.exit 1

record_logs = true
export stop_recording_logs = ->
  record_logs = false

setup_done = false
record = (msg) ->
  if not record_logs
    return

  if not setup_done
    setup_done = true
    setup_logs!

  timestamp = os.date '%Y-%m-%d@%H:%M:%S'
  with? io.open LOG_FILE, 'a'
    \write "[#{timestamp}]: #{msg}\n"
    \close!

MAX_LOGS = 10
setup_logs = ->
  fs.makeDir LOG_DIR

  existing_logs = fs.list LOG_DIR
  table.sort existing_logs, (a, b) -> a > b
  for log_to_delete in *existing_logs[MAX_LOGS-1,]
    print "DELETING #{LOG_DIR}/#{log_to_delete}"
    os.remove "#{LOG_DIR}/#{log_to_delete}"

  old_print = _G.print
  _G.print = (...) ->
    ret = old_print ...
    msg = table.concat {...}, ' '
    log -> msg
    return ret
    -- TODO(kcza): remove this hack!
