local *

import 'clap' as :Flag, :Subcommand
import 'freight.config' as :config
import 'freight.peripheral.uplink' as :Uplink
import 'freight.upgrade.monitor' as :UpgradeMonitor
import 'quicktype' as :F

display = require 'freight.nodes.display.main'
factory = require 'freight.nodes.factory.main'
ledger = require 'freight.nodes.ledger.main'
marshal = require 'freight.nodes.marshal.main'

export subcommand = with Subcommand 'start'
  \description 'start this freight instance'
  \add with Flag 'fragile'
    \description 'exit on failure, rather than reattempting'
    \short nil
    \dest 'no_reattempt'
  \add with Flag 'allow-outdated'
    \description 'skip upgrade check'
    \short nil

export main = F '({}) -> <>', (args) ->
  cfg, err = config!
  if err?
    print "cannot start freight: cannot load config: #{err}"
    return
  if not cfg?
    print 'cannot start freight: config missing\ntry running `freight init <instance-type>` first'
    return

  if not args.allow_outdated
    with UpgradeMonitor cfg, Uplink!
      if \upgrade_available!
        \upgrade_now!

  to_spam = if cfg.marshal?
    -> marshal.main cfg
  else if cfg.display?
    -> display.main cfg
  else if cfg.factory?
    -> factory.main cfg
  else if cfg.ledger?
    -> ledger.main cfg
  else
    print 'cannot detect instance type'
    return
  spam args.no_reattempt, to_spam

spam = F '(boolean, () -> <>) -> <>', (no_reattempt, fn) ->
  if no_reattempt
    fn!
    return

  attempt = 1
  done = false
  while not done
    try
      fn!
      done = true
    catch err
      colour = term?.getTextColor!
      term?.setTextColor colors.red
      print debug.traceback err
      term?.setTextColor colour

      print "[failed]"
      os.sleep 10
      term?.clear!

      attempt += 1
      print "[attempt #{attempt}]"
