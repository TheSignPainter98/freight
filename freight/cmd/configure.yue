local *

import 'clap' as :Flag, :Param, :Subcommand
import 'freight.configurator.main' as :Configurator
import 'quicktype' as :declare_type, :F

export subcommand = with Subcommand 'configure'
  \description 'remotely configure a freight instance'
  \add with Subcommand 'marshal'
    \description 'configure the marshal'
  \add with Subcommand 'factory'
    \description 'configure a factory'
    \add with Param 'which'
      \description 'the name of the factory to configure'

declare_type 'ConfiguratorArgs', [[{
  marshal: ?ConfiguratorMarshalArgs,
  factory: ?ConfiguratorFactoryArgs,
}]]
declare_type 'ConfiguratorMarshalArgs', '{}'
declare_type 'ConfiguratorFactoryArgs', [[{
  which: string,
}]]
export main = F '(ConfiguratorArgs) -> <>', (args) ->
  configurator = Configurator!
  err = if args.marshal?
    configurator\configure_marshal!
  else if args.factory?
    configurator\configure_factory args.factory.which
  else
    error 'internal error: no command recognised'
  if err?
    print err
