local *

import apply_compat, test_compat from require 'compat'
apply_compat!

import declare_type from require 'quicktype'
declare_type 'Self', 'some'

import Args from require 'freight.args'
import run_tests from require 'spec'
import 'freight.logger'
import log from require 'freight.logger'
import 'spec'
import F from require 'quicktype'
import detect_and_use_monitor from require 'freight.monitor'

clean = require 'freight.clean.main'
disable = require 'freight.disable.main'
enable = require 'freight.enable.main'
init = require 'freight.init.main'
start = require 'freight.start.main'
upgrade = require 'freight.upgrade.main'

global skip_minecraft_tests = false

main = (raw_args) ->
  args, ok = Args::parse raw_args
  if not ok
    return

  logger.set_log_verbosity args.verbose
  spec.set_log_verbosity args.verbose

  if args.test?
    skip_minecraft_tests = args.test.no_minecraft
    run_tests args.test.filter
  else if args.start?
    detect_and_use_monitor!
    start.main args.start
  else if args.init?
    init.main args.init
  else if args.clean?
    clean.main args.clean
  else if args.enable?
    enable.main args.enable
  else if args.disable?
    disable.main args.disable
  else if args.upgrade?
    upgrade.main args.upgrade
  else
    error 'internal error: no command recognised'

spec.spec ->
  import describe, it from require 'spec'

  describe 'compat', ->
    it 'passes checks', ->
      test_compat!

args = {...}
ok = true
try
  main args
catch err
  if err != 'EXIT(0)'
    print debug.traceback err
    ok = false
if not ok
  os.exit 1
